<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Teaching with Interactive Data Visualization</title><link>http://walkerke.github.io/</link><description></description><atom:link href="http://walkerke.github.io/feeds/shiny.rss.xml" rel="self"></atom:link><lastBuildDate>Thu, 16 Oct 2014 00:00:00 -0500</lastBuildDate><item><title>Life expectancy trends in the former USSR</title><link>http://walkerke.github.io/2014/10/russia-lex/</link><description>&lt;p&gt;When covering Russia and the former constitutent republics of the USSR in World Regional Geography, a key part of my material addresses the issues that some of these countries have had in their transitions from centralized to market economies.  Some of these countries experienced dramatic demographic shifts after the dissolution of the USSR, including a noticeable decline in life expectancy.&lt;/p&gt;
&lt;p&gt;I'd been using some static Excel charts to illustrate life expectancy declines in Russia, Belarus, and Ukraine in previous courses.  However, I felt that an interactive solution would be preferable so that my students and I could explore the data in class over the course of our discussion.  I opted for &lt;a href="http://www.highcharts.com/"&gt;Highcharts&lt;/a&gt;, through R and &lt;a href="http://rcharts.io"&gt;rCharts&lt;/a&gt;, for the interactivity.  I then turned to &lt;a href="http://shiny.rstudio.com/"&gt;Shiny&lt;/a&gt; from &lt;a href="http://www.rstudio.com/"&gt;RStudio&lt;/a&gt; to put everything together.  &lt;/p&gt;
&lt;p&gt;Shiny is a framework that allows R users to turn analyses and visualizations into interactive applications.  Shiny can be run locally on your computer, or deployed to the web via the &lt;a href="https://www.shinyapps.io/"&gt;ShinyApps.io&lt;/a&gt; hosting service, which is currently free.  The beauty of Shiny is that it allows you to explore your data interactively with a friendly web-based user interface without writing any JavaScript, and it lets R users create and deploy apps to be shared with non-R users who may nonetheless be interested in exploring a dataset or visualization. &lt;a href="http://shiny.rstudio.com/gallery/"&gt;You can see RStudio's gallery of examples here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To get started, I acquired data from &lt;a href="http://www.mortality.org/"&gt;The Human Mortality Database&lt;/a&gt;, (HMD) a project of UC Berkeley and the Max Planck Institute.  The HMD prefers that users not re-distribute the data, so if you'd like to reproduce this chart, you'll need to download the data yourself.  However, the service is free (with registration) and relatively simple to use.  The HMD provides mortality data for 37 countries, including Russia, Belarus, and Ukraine. From the HMD, I downloaded the 1-year life expectancy at birth tables for these countries, and saved them to my working directory as delimited text files, naming them accordingly.  Once I did this, I used the code below to process the data into a suitable format for visualization.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;library&lt;span class="p"&gt;(&lt;/span&gt;tidyr&lt;span class="p"&gt;)&lt;/span&gt;
library&lt;span class="p"&gt;(&lt;/span&gt;dplyr&lt;span class="p"&gt;)&lt;/span&gt;

russia &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; read.table&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;russia.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; skip &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

names&lt;span class="p"&gt;(&lt;/span&gt;russia&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; c&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Year&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Female&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Total&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

russia&lt;span class="o"&gt;$&lt;/span&gt;country &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Russia&amp;quot;&lt;/span&gt;

ukraine &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; read.table&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ukraine.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; skip &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

names&lt;span class="p"&gt;(&lt;/span&gt;ukraine&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; c&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Year&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Female&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Total&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

ukraine&lt;span class="o"&gt;$&lt;/span&gt;country &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Ukraine&amp;quot;&lt;/span&gt;

belarus &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; read.table&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;belarus.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; skip &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

names&lt;span class="p"&gt;(&lt;/span&gt;belarus&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; c&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Year&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Female&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Total&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

belarus&lt;span class="o"&gt;$&lt;/span&gt;country &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Belarus&amp;quot;&lt;/span&gt;

dat &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rbind&lt;span class="p"&gt;(&lt;/span&gt;russia&lt;span class="p"&gt;,&lt;/span&gt; ukraine&lt;span class="p"&gt;,&lt;/span&gt; belarus&lt;span class="p"&gt;)&lt;/span&gt;

dlong &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; dat &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  select&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;Total&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  gather&lt;span class="p"&gt;(&lt;/span&gt;Gender&lt;span class="p"&gt;,&lt;/span&gt; lex&lt;span class="p"&gt;,&lt;/span&gt; Female&lt;span class="o"&gt;:&lt;/span&gt;Male&lt;span class="p"&gt;)&lt;/span&gt;

write.csv&lt;span class="p"&gt;(&lt;/span&gt;dlong&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;data.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In a nutshell, the above code reads in each of the three text files, identifies the country the data correspond to, then combines them.  It then uses functions from the &lt;a href="http://cran.r-project.org/web/packages/dplyr/index.html"&gt;dplyr&lt;/a&gt; and &lt;a href="http://cran.r-project.org/web/packages/tidyr/index.html"&gt;tidyr&lt;/a&gt; to convert the data to "tidy" (long) format, which is what I want for visualization.  I then saved the data as a CSV and moved it to a new folder where I would create my Shiny app.  &lt;/p&gt;
&lt;p&gt;A Shiny app requires two files to run: &lt;strong&gt;server.R&lt;/strong&gt;, which specifies the data analysis/visualization to show, and &lt;strong&gt;ui.R&lt;/strong&gt;, in which you prepare the user interface.  An optional third file (which I haven't used here), &lt;strong&gt;global.R&lt;/strong&gt;, can be used to read in data or do any background data preparation that you want to make available to both the server and UI scripts.  I largely adapted my server and UI code from &lt;a href="http://shiny.rstudio.com/tutorial/"&gt;RStudio's Shiny tutorials&lt;/a&gt; and &lt;a href="http://ramnathv.github.io/rChartsShiny/"&gt;Ramnath Vaidyanathan's tutorial on using rCharts with Shiny&lt;/a&gt;, with some help from StackOverflow as well.  &lt;/p&gt;
&lt;p&gt;I prepared the UI first with the code below.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# ui.R&lt;/span&gt;

library&lt;span class="p"&gt;(&lt;/span&gt;rCharts&lt;span class="p"&gt;)&lt;/span&gt;

dat &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; read.csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;data.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Define UI &lt;/span&gt;
shinyUI&lt;span class="p"&gt;(&lt;/span&gt;fluidPage&lt;span class="p"&gt;(&lt;/span&gt;

  &lt;span class="c1"&gt;# Sidebar &lt;/span&gt;
  sidebarLayout&lt;span class="p"&gt;(&lt;/span&gt;
    sidebarPanel&lt;span class="p"&gt;(&lt;/span&gt;
      selectInput&lt;span class="p"&gt;(&lt;/span&gt;inputId &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;country&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                  label &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Select a country:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                  choices &lt;span class="o"&gt;=&lt;/span&gt; c&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Russia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Belarus&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Ukraine&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
                  selected &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Russia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
      sliderInput&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;range&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  label &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Years to display:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  min &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1959&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  max &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2010&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  value &lt;span class="o"&gt;=&lt;/span&gt; c&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1959&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2010&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
                  format &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;0000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
      helpText&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Data reflect the life expectancy &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="s"&gt;&amp;quot;at birth from 1959 to 2010 &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
               &lt;span class="s"&gt;&amp;quot;for men and women in Russia, &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="s"&gt;&amp;quot;Belarus, and Ukraine.  Data are &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
               &lt;span class="s"&gt;&amp;quot;obtained from the Human Mortality &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="s"&gt;&amp;quot;Database, a project of &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="s"&gt;&amp;quot; the University of California, &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="s"&gt;&amp;quot;Berkeley (USA), and Max Planck &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="s"&gt;&amp;quot;Institute for Demographic Research &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="s"&gt;&amp;quot;(Germany). Data are available &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="s"&gt;&amp;quot;at www.mortality.org or www.humanmortality.de &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
               &lt;span class="s"&gt;&amp;quot;(downloaded on 14 Oct 2014).&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;

    &lt;span class="c1"&gt;# Show the plot &lt;/span&gt;
    mainPanel&lt;span class="p"&gt;(&lt;/span&gt;
      showOutput&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;lexplot&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;highcharts&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the &lt;strong&gt;ui.R&lt;/strong&gt; script, I define the parameters of the Shiny user interface.  I'll have a drop-down menu to select the country of choice (Russia, Belarus, or Ukraine), as well as a time slider that allows the user to specify the years to show in the chart.  I then use the &lt;code&gt;showOutput&lt;/code&gt; function from rCharts in the &lt;code&gt;mainPanel&lt;/code&gt; call to tell Shiny to show my chart in the main area.  &lt;/p&gt;
&lt;p&gt;Next, I set up the server.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# server.R&lt;/span&gt;

library&lt;span class="p"&gt;(&lt;/span&gt;rCharts&lt;span class="p"&gt;)&lt;/span&gt;

dat &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; read.csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;data.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

options&lt;span class="p"&gt;(&lt;/span&gt;RCHART_WIDTH &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

shinyServer&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;input&lt;span class="p"&gt;,&lt;/span&gt; output&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  output&lt;span class="o"&gt;$&lt;/span&gt;lexplot &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; renderChart2&lt;span class="p"&gt;({&lt;/span&gt;
    selected &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; input&lt;span class="o"&gt;$&lt;/span&gt;country
    country &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; subset&lt;span class="p"&gt;(&lt;/span&gt;dat&lt;span class="p"&gt;,&lt;/span&gt; country &lt;span class="o"&gt;==&lt;/span&gt; selected &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; Year &lt;span class="o"&gt;%in%&lt;/span&gt; seq&lt;span class="p"&gt;(&lt;/span&gt;input&lt;span class="o"&gt;$&lt;/span&gt;range&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; input&lt;span class="o"&gt;$&lt;/span&gt;range&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    h1 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; hPlot&lt;span class="p"&gt;(&lt;/span&gt;
      x &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Year&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      y &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;lex&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      group &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Gender&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      data &lt;span class="o"&gt;=&lt;/span&gt; country&lt;span class="p"&gt;,&lt;/span&gt; 
      type &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;line&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    h1&lt;span class="o"&gt;$&lt;/span&gt;colors&lt;span class="p"&gt;(&lt;/span&gt;c&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    h1&lt;span class="o"&gt;$&lt;/span&gt;yAxis&lt;span class="p"&gt;(&lt;/span&gt;title &lt;span class="o"&gt;=&lt;/span&gt; list&lt;span class="p"&gt;(&lt;/span&gt;enabled &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; text &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Life expectancy at birth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;h1&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The key here to get this to work is to make sure that your &lt;strong&gt;server.R&lt;/strong&gt; and &lt;strong&gt;ui.R&lt;/strong&gt; scripts communicate correctly.  My UI takes an input that is dependent upon the country and years selected by the user, so I create a subsetted data frame, &lt;code&gt;country&lt;/code&gt;, within the &lt;code&gt;renderChart2&lt;/code&gt; function that will respond to that.  I then specify the parameters of the Highchart plot, and tell my &lt;code&gt;renderChart2&lt;/code&gt; function to return that plot and assign it to the &lt;code&gt;lexplot&lt;/code&gt; property of the output, which is what my user interface script will expect.  &lt;/p&gt;
&lt;p&gt;RStudio will know that you are creating a Shiny app (given the names of your scripts), so you can simply click the &lt;strong&gt;Run App&lt;/strong&gt; button to run your app locally, and then deploy it to ShinyApps if you'd like.  Now, let's take a look at the result.  Use the drop-down menu to select a country, and the time slider to specify a range of years to display.   &lt;/p&gt;
&lt;iframe src="https://walkerke.shinyapps.io/lex_former_ussr/" height="500" width="850" frameBorder = "0" scrolling = "no" seamless&gt;&lt;/iframe&gt;

&lt;p&gt;I now have an application that allows me to seamlessly switch between countries, change years, and explore the data thanks to Highcharts' built-in interactivity.  The charts reveal key trends in life expectancy both pre- and post- USSR.  In Russia, for example, we see that life expectancy declines through the mid-20th century, then peaks in the 1980s, &lt;a href="http://www.rand.org/pubs/conf_proceedings/CF124/cf124.chap4.html"&gt;which is attributed to Mikhail Gorbachev's anti-alcohol campaign.&lt;/a&gt;  Life expectancy then falls dramatically around the time that the USSR dissolved.  For example, male life expectancy in 1994 in Russia was a little over 57, around 7.5 years less than its peak in 1987.  &lt;a href="http://www.ncbi.nlm.nih.gov/pubmed/9508159"&gt;Studies have attributed this to a variety of factors, including alcohol abuse, poor nutrition and health behaviors, and problems with the health care system.&lt;/a&gt;  However, life expectancy improves in the late 2000s, &lt;a href="http://www.demographic-research.org/volumes/vol28/32/28-32.pdf"&gt;in part due to declines in cardiovascular disease and homicides&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;In class, I first presented the chart (which displays very nicely in a &lt;a href="http://ramnathv.github.io/slidify/"&gt;Slidify&lt;/a&gt; presentation) and explored the data with my students.  I then showed my students the first segment from the documentary &lt;a href="https://www.youtube.com/watch?v=J1OyIJtjdpo"&gt;Death of a Nation: Russia&lt;/a&gt; by Marcel Theroux which explores some of the underlying issues behind these demographic changes in more depth.  We then used the video to collectively think about some reasons for the decline of life expectancy in Russia after the fall of the USSR.  The video paired very nicely with the interactive Shiny app; the charts provided key visual demographic context, and the video then put faces to the data.  &lt;/p&gt;
&lt;p&gt;The app is fully reproducible (just make sure you download the data from &lt;a href="http://www.mortality.org"&gt;the Human Mortality Database&lt;/a&gt; first) and you can find the code in its &lt;a href="https://github.com/walkerke/teaching-with-datavis/tree/master/russia-lex"&gt;GitHub repository&lt;/a&gt;.  The chart is also available in stand-alone form here: &lt;a href="https://walkerke.shinyapps.io/lex_former_ussr/"&gt;https://walkerke.shinyapps.io/lex_former_ussr/&lt;/a&gt;.   Feel free to use the app as you'd like, or modify the code as you wish to create your own apps!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Thanks to:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The creators of the Human Mortality Database for making their data freely available &lt;/li&gt;
&lt;li&gt;The &lt;a href="http://http://www.rstudio.com/"&gt;RStudio&lt;/a&gt; team for Shiny and all its associated training materials&lt;/li&gt;
&lt;li&gt;The developers of rCharts and Highcharts&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kyle Walker</dc:creator><pubDate>Thu, 16 Oct 2014 00:00:00 -0500</pubDate><guid>tag:walkerke.github.io,2014-10-16:2014/10/russia-lex/</guid><category>R</category><category>rCharts</category><category>World Regional</category><category>Shiny</category></item></channel></rss>